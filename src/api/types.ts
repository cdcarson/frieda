


export type Model = Record<string,unknown>;


export type CastType = 'string'|'bigint'|'int'|'float'|'json'|'date'|'boolean';

export type FieldDefinition<Name extends string> = {
  name: Name;
  databaseName: string;
  sqlType: string;
  castType: CastType;
  javascriptType: string;
  isPrimaryKey: boolean;
  isSecondaryKey: boolean;
  isAutoGenerated: boolean;
  isAlwaysGenerated: boolean;
  isNullable: boolean;
  isInvisible: boolean;
  isCreatedAt: boolean;
  isUpdatedAt: boolean;
  hasDefault: boolean;
}

export type ModelDefinition<M extends Model, Name extends string> = {
  name: Name;
  databaseName: string;
  fields: {
    [N in keyof M & string]: FieldDefinition<N>
  }
}





